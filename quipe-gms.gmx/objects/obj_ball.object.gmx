<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_circle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

grav = 0.35; //pixels per second
vX = 0;
vY = 0;

xFriction = 0; //pixels per second (?)
drawColor = make_color_rgb(irandom_range(50, 200), irandom_range(50, 200), irandom_range(50, 200));

ID = "";
alarm[0] = 1;
request = noone;
addRequest = noone;
displayID = "";
displayScore = 0;

censorID = false;
censoredID = "";

value = -1;
snd = noone;

hasScored = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///die

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///make http request to localhost
if (ID != "")
    request = http_get("http://localhost:5000/user?id=" + string(ID));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
vY += grav;
vX = sign(vX) * max(abs(vX) - xFriction, 0);
for (var i = 0; i &lt; abs(vY); i++) {
    var prevY = y;
    y += sign(vY);
    var peg = collision_circle(x, y, sprite_get_width(spr_circle) / 2, obj_peg, true, true);
    if (peg != noone) {
        y = prevY;
        scr_bounce(id, peg);
        break;
    }
}
for (var i = 0; i &lt; abs(vX); i++) {
    var prevX = x;
    x += sign(vX);
    var peg = collision_circle(x, y, sprite_get_width(spr_circle) / 2, obj_peg, true, true);
    if (peg != noone) {
        x = prevX;
        scr_bounce(id, peg);
        break;
    }
}

if (y &gt; room_height * 2) {
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_scoring_zone">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!hasScored) {
    hasScored = true;
    value = other.value;
    if (ID != "" &amp;&amp; displayScore &gt;= 0) {
        addRequest = http_get("http://localhost:5000/user?id=" + string(ID) + "&amp;add=" + string(other.value));
    }
    
    alarm[1] = 300;
    if (ID == "")
        alarm[1] = 10;
        
    var burst = instance_create(other.x, other.y - (sprite_get_height(spr_zone) / 2), obj_burst);
    burst.drawColor = drawColor;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///receive http

if (ds_map_find_value(async_load, "id") == request) {
    if (ds_map_find_value(async_load, "status") == 0) {
        var str = ds_map_find_value(async_load, "result");
        
        var results = update_parse(str);
        displayID = results[0];
        displayScore = results[1];
        
        if (string_digits(displayID) == displayID) {
            censorID = true;
            censoredID = "****" + substring(displayID, 4, 4);
        }
        
        if (displayScore == 0) {
            obj_ball_spawn.message = "Welcome to Quipe! Your ID ends with " + substring(displayID, 4, 4) + ".";
            obj_ball_spawn.alarm[0] = 300;
        } else if (displayScore &gt; 0) {
            var disp = displayID;
            if (censorID) {
                disp = censoredID;
            }
            obj_ball_spawn.message = disp + " swiped in! Their current score is: " + string(displayScore);
            obj_ball_spawn.alarm[0] = 300;
        } else {
            var disp = displayID;
            if (censorID) {
                disp = censoredID;
            }
            obj_ball_spawn.message = disp + " already swiped in, and has " + string(displayScore * -1) + " points.";
            obj_ball_spawn.alarm[0] = 200;
        }
        
    }
} else if (ds_map_find_value(async_load, "id") == addRequest) {
    if (ds_map_find_value(async_load, "status") == 0) {
        var str = ds_map_find_value(async_load, "result");
        
        var results = update_parse(str);
        displayID = results[0];
        if (results[1] &gt;= 0) {
            displayScore = results[1];
            
            var disp = displayID;
            if (censorID) {
                disp = censoredID;
            }
            
            obj_ball_spawn.message = disp + " scored " + string(value) + " points.#Their new score is: " + string(displayScore) + ".#Thanks for swiping in!";
            obj_ball_spawn.alarm[0] = 360;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var opa = 1;
if (displayScore &lt; 0)
    opa = 0.5;

draw_sprite_ext(sprite_index, 0, x, y, 1, 1, 0, drawColor, opa);
if (displayID != "") {
    //
    draw_set_font(fnt_mono_smaller);
    draw_set_halign(fa_center);
    draw_set_color(c_black);
    
    var disp = displayID;
    if(censorID)
        disp = censoredID;
    
    draw_text(x, y - 38, disp); 
    if (displayScore &gt;= 0)
        draw_text(x, y - 10, string(displayScore));
    else {
        draw_text(x, y - 10, string(displayScore * -1));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
